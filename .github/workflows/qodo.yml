name: QODO AI Test Generation

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - 'frontend/**/*.{js,jsx,ts,tsx}'
      - '!frontend/**/*.test.{js,jsx,ts,tsx}'
      - '!frontend/**/*.spec.{js,jsx,ts,tsx}'
  # Add manual trigger for solo developers
  workflow_dispatch:
    inputs:
      path:
        description: 'Path to generate tests for'
        required: false
        default: 'frontend'
      test-location:
        description: 'Where to place tests'
        required: false
        default: 'colocated'
        type: choice
        options:
          - colocated
          - dedicated

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v3
      
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            components:
              - 'frontend/src/components/**/*.{js,jsx,ts,tsx}'
              - '!frontend/src/components/**/*.test.{js,jsx,ts,tsx}'
            hooks:
              - 'frontend/src/hooks/**/*.{js,ts}'
              - '!frontend/src/hooks/**/*.test.{js,ts}'
            app:
              - 'frontend/src/app/**/*.{js,jsx,ts,tsx}'
              - '!frontend/src/app/**/*.test.{js,jsx,ts,tsx}'

  generate-tests:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.changes != '[]' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        area: ${{ fromJSON(needs.detect-changes.outputs.changes) }}
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Install QODO CLI
        run: npm install -g qodo-cli
        
      - name: Generate co-located tests
        run: |
          # Process each changed file and generate test in the same directory
          FILES=$(find ${{ matrix.area || github.event.inputs.path }} -type f -not -name "*.test.*" -not -name "*.spec.*")
          for file in $FILES; do
            dir=$(dirname "$file")
            filename=$(basename "$file")
            extension="${filename##*.}"
            name="${filename%.*}"
            
            # Create test file with appropriate extension
            test_file="${dir}/${name}.test.${extension}"
            
            echo "Generating test for $file at $test_file"
            qodo test generate --file="$file" --out="$test_file" --format=colocated
          done
          
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "test: add AI-generated tests for ${{ matrix.area || github.event.inputs.path }}"
          title: "test: add AI-generated tests for ${{ matrix.area || github.event.inputs.path }}"
          body: |
            ## AI-Generated Tests
            
            This PR adds automated tests generated by QODO AI for recent changes in `${{ matrix.area || github.event.inputs.path }}`.
            
            ### ðŸ§ª Test Strategy
            - Location: Co-located with source files
            - Generated on: ${{ github.event.pull_request.html_url || 'Manual trigger' }}
            
            Please review these tests and make any necessary adjustments.
          branch: qodo/tests-${{ matrix.area || github.event.inputs.path }}-${{ github.run_id }}
          labels: automated,tests,frontend